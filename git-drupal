#!/bin/sh
#
# Manages official Drupal modules & themes in repository.
#
# Copyright (C) 2016 Michał Lüth <michal.lueth@outlook.com>
#

# Add git core programs to $PATH.
PATH=$PATH:$(git --exec-path)
# Include git scriplet
source git-sh-setup

require_work_tree

if [ $# -eq 0 ]; then
		set -- -h
fi

# Script options
OPTS_SPEC="\
git drupal add    --prefix <prefix> <extension> <version>
git drupal move   --prefix <prefix> <extension>
git drupal remove <extension>
git drupal update <extension> <version>
--
h,help            show help
P,prefix=         name of subdirectory where extensions are stored
m,message=        use the given message as the commit message for the merge commit
"
eval "$(echo "$OPTS_SPEC" | git rev-parse --parseopt -- "$@" || echo exit $?)"

# Require to run a command from the toplevel of GIT repository.
if [[ $(git rev-parse --show-toplevel) != $PWD ]]; then
  die "You need to run this command from the toplevel of the working tree."
fi

prefix=
message=

#echo "Options: $*"
while [ $# -gt 0 ]; do
	opt="$1"
	shift
	case "$opt" in
		-P) prefix="$1"; shift ;;
		-m) message="$1"; shift ;;
		--) break ;;
		*) die "Unexpected option: $opt" ;;
	esac
done

command="$1"
shift
case "$command" in
	add|move|remove|update) ;;
	*) die "Unknown command '$command'" ;;
esac

# Require prefix for commands.
if [ "$command" = "add" -o "$command" = "move" ]; then
	if [ -z "$prefix" ]; then
		die "You must provide the --prefix option."
	fi
fi

# Validate extension (module/theme) name.
# The extension name must start with a letter and contains only of lowercase
# letters, digits and underscores.
# See Drupal docs: https://www.drupal.org/node/1074362
if [[ "$1" =~ ^([a-z][a-z0-9\_]{0,}[^_])$ ]]; then
	EXTENSION="$1"
else
	die "Extension name MUST start with a letter and contain only of lowercase letters, digits and underscores."
fi

# Validate extension (module/theme) version.
# The extension version must start with a digit [3-9] (Drupal GIT repository has
# no releases under 3.x: http://cgit.drupalcode.org/drupal/refs).
# See Drupal docs: https://www.drupal.org/node/1015226
if [[ "$2" =~ ^[3-9].* ]]; then
	VERSION="$2"
else
	die "Extension version MUST start with a digit [3-9]."
fi

# Drupal
ftp="https://ftp.drupal.org/files/projects"
http="https://www.drupal.org/project"

# Check whether extension (module/theme) with the given name exists at drupal.org
# website.
extension_url_exists() {
	local http_status=$(curl --location --output /dev/null --silent --head --fail -A $0 -w %{http_code} $http/$EXTENSION)
	say "Looking for extension '$EXTENSION'..."

	if [ $http_status -ne 200 ]; then
		case "$http_status" in
			404) die "Extension '$EXTENSION' hasn't been found." ;;
			*) die "Extension URL is not accessible (HTTP response: $http_status)" ;;
		esac
	else
		say "[OK] Extension '$EXTENSION' found."
	fi
}

# Check whether version of the extension (module/theme) exists by requesting
# the archive (.tar.gz) filename containing of the extension name and the version
# number.
version_url_exists() {
	local archive="$EXTENSION-$VERSION.tar.gz"
	local ftp_status=$(curl --location --output /dev/null --silent --head --fail -A $0 -w %{http_code} $ftp/$archive)
	say "Looking for version '$VERSION'..."

	if [[ $ftp_status -ne 200 ]]; then
		case "$ftp_status" in
			404) die "Version '$VERSION' of '$EXTENSION' hasn't been found." ;;
			*) die "Version URL is not accessible (HTTP response: $ftp_status)" ;;
		esac
	else
		say "[OK] Version '$VERSION' of '$EXTENSION' found."
	fi
}
